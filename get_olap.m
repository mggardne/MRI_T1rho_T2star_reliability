function [odat,csvdat,ncsv,sls,ids] = get_olap(xlsnam,shtnam,dirnam)
%GET_OLAP  Reads data about the overlap between the femur and tibia
%          segmentations from a MS-Excel spreadsheet file.
%
%          ODAT = GET_OLAP(XLSNAM) reads the MS-Excel spreadsheet file,
%          XLSNAM, and returns the data matrix, ODAT, with data about
%          the overlap between the femur and tibia segmentations.  Only
%          data with an overlap greater than zero is returned.
%
%          ODAT = GET_OLAP(XLSNAM,SHTNAM,DIRNAM) opens the MS-Excel
%          spreadsheet file, XLSNAM, from the directory, DIRNAM, and
%          reads the overlap data from sheet, SHTNAM.
%
%          [ODAT,CSVDAT,NCSV] = GET_OLAP(XLSNAM) returns an integer
%          matrix, CSVDAT, with the CSV file identifiers (subject
%          number, visit code, result code, leg code and load code) for
%          the CSV files with overlaps.  One is added to the CSV file
%          identifiers so that the codes (0,1) can be used as indices  
%          (1,2).  Also, returns the number of CSV files with overlaps,
%          NCSV.
%
%          [ODAT,CSVDAT,NCSV,SLS,IDS] = GET_OLAP(XLSNAM) returns a list
%          of slices with overlaps, SLS, and a logical index matrix,
%          IDS, with indices to the slices for each of the CSV files in
%          the columns.
%
%          NOTES:  1.  The MS-Excel spreadsheet file with the overlap
%                  data is generated by contact_chk.m.  Please see
%                  contact_chk.m.
%
%                  2.  One is added to the CSV file identifiers so that
%                  the codes (0,1) can be used as indices (1,2).
%
%          25-Mar-2021 * Mack Gardner-Morse
%

% ######################################################################
%
% Check for Inputs
%
if (nargin<1)
  error([' *** ERROR in GET_OLAP:  An input MS-Excel spreadsheet', ...
         ' file name is required!']);
end
%
if (nargin<3)
  shtnam = 1;
end
%
if (nargin<2)
  dirnam = '';
end
%
if isempty(shtnam)
  shtnam = 1;
end
%
% Open File, Get Valid Rows, and Read Overlap Data
%
% odat = xlsread(fullfile(dirnam,xlsnam),shtnam);
t = readtable(fullfile(dirnam,xlsnam),'Sheet',shtnam, ...
              'VariableNamingRule','preserve');
odat = table2array(t);
%
idv = ~isnan(odat(:,1));
odat = odat(idv,:);
%
dmx = odat(:,8);        % Overlap distance in pixels
idv = dmx>0;            % Overlaps greater than zero
odat = odat(idv,:);
%
% Get CSV File Identifiers
%
% Column 1 - Subject number
% Column 2 - Visit number (1 - Visit 1, 2 - Visit 2)
% Column 3 - Result number (1 - T1rho, 2 - T2*)
% Column 4 - Leg number (1 - Left, 2 - Right)
% Column 5 - Load number (1 - Unloaded, 2 - Loaded)
%
[csvdat,~,ida] = unique(odat(:,1:5),'rows');     % CSV files ID data
csvdat(:,2:5) = csvdat(:,2:5)+1;       % Convert code (0,1) to index (number [1,2])
ncsv = size(csvdat,1);  % Number of CSV files to change
%
% Get Slice Data
%
sls = odat(:,7);
% sls = repmat(sls,1,ncsv);
% slsc = num2cell(sls,1)';
%
ids = ida==1:ncsv;
% idsc = num2cell(ids,1)';
% result = cellfun(@(a, b) a(b), slsc, idsc, 'UniformOutput', false);
%
return